{"version":3,"sources":["webpack:///index.js","webpack:///webpack/bootstrap 102464530d9a42a5debd","webpack:///./mainIndexView.ts","webpack:///./infrastructure/ajax.ts","webpack:///./infrastructure/enums.ts","webpack:///./infrastructure/initializer.ts","webpack:///./infrastructure/handlers.ts","webpack:///./infrastructure/view.ts","webpack:///./graphics/displayer.ts","webpack:///./core/model.ts","webpack:///./graphics/chartDisplayer.ts","webpack:///./graphics/elementDisplayer.ts","webpack:///./graphics/chart.ts","webpack:///./graphics/tableDisplayer.ts","webpack:///./graphics/tableMaker.ts","webpack:///./infrastructure/signalR.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","ajax_1","Enums","initializer_1","displayer_1","signalR_1","$","document","ready","inputUrlErorrs","startBtnWaiter","hide","stBtnDefText","startBtn","testTrovider","attr","inputUrl","modalWaiter","displayer","Displayer","notifier","Notifier","show","visualize","click","e","preventDefault","value","val","isValueValid","match","removeClass","html","clean","ajax","type","url","data","connectionId","success","v","addClass","sortAndDisplay","error","updateTarget","this","el","Initializer","pagerInit","historyConteiner","querySelector","addEventListener","arg","eventSource","target","is","rowId_1","uri","Ajax","run","HttpMethod","POST","historyRowId","slice","startIndex","siteMap","httpMethodType","callBackOnDone","done","PagerElementRole","handlers_1","View","selector","pager","Pager","pagerAjax","PagerAjaxHandler","nextBtn","sendAjaxRequest","previousBtn","prototype","pagerBtn","_this","isEnabled","ajaxData","rowId","newPage","contentHistory","pagerBtnStyleToggle","model","historyPager","previousStartIndex","isFirstPage","nextStartIndex","isLastPage","PagerBtn","element","Object","defineProperty","set","enumerable","configurable","get","parent","hasClass","getPagerElements","elments","length","each","index","elem","Next","Previous","Model","MeasurementsViewModel","chartDisplayer_1","tableDisplayer_1","chartId","tableContainerId","isHidden","chartDisplayer","ChartDisplayer","tableDisplayer","TableDisplayer","format","push","display","results","clear","sortModelExceptFirst","mintime","toFixed","maxtime","first","shift","sortModel","unshift","sort","a","b","MeasurementResult","HistoryPage","HistoryPager","__extends","d","__","constructor","hasOwnProperty","create","elementDisplayer_1","chart_1","_super","divContainerId","chartInit","htmlElement","dataInit","chart","displayFromLocalModel","replaceChartData","splitModel","update","displayFromOuterModel","updateChart","modelParts","ResultPack","updateModelParts","urls","minValues","maxValues","modelAsArray","x","y","res","_i","_a","item","trace1","name","marker","color","trace2","divId","container","w","h","Chart","layout","font","family","title","barmode","autosize","width","height","xaxis","showticklabels","autorange","yaxis","titlefont","size","tickfont","legend","bgcolor","bordercolor","canvasElement","ElementDisplayer","elementId","style","Plotly","newPlot","redraw","Table","tableMakerInit","headers","props","maper","HeaderPropertyMaper","tableMaker","TableMaker","tableClass","createTabelInContainer","curentColumnNumber","fillTableFrom","addRow","tbody","tableElement","children","innerHTML","addHeader","tableContainer","numberColumn","makeHeaderRow","result","makeHeadersByMaper","list","headerName","makeTableRow","row","createElement","makeTableDataByMaper","makeTableDataByDefault","makeClassAttribute","classValue","addRows","model_1","mode","InsertionMode","Replace","Append","appendChild","Error","table","className","addRowCounter","propName","propertyName","properties","addMap","i","HeaderProperty","callback","connection","notificationHub","client","displayMessage","iAm","hub","start"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GAG/B,YE7CD,IAAAW,GAAAX,EAAqB,GACTY,EAAKZ,EAAM,GACvBa,EAAAb,EAA4B,GAE5Bc,EAAAd,EAA0B,GAC1Be,EAAAf,EAAyB,GAEzBgB,GAAEC,UACGC,MAAM,WAEH,GAAIC,GAAiBH,EAAE,mBACnBI,EAAiBJ,EAAE,mBACvBI,GAAeC,MACf,IAAIC,GAAeN,EAAE,yBACjBO,EAAWP,EAAE,iBACbQ,EAAeD,EAASE,KAAK,YAC7BC,EAAWV,EAAE,cAEbW,EAAcX,EAAE,eACpBW,GAAYN,MAEZ,IAAIO,GAAY,GAAId,GAAAe,UAAU,kBAAmB,mBAE7CC,EAAW,GAAIf,GAAAgB,SAAS,SAACvB,GAEzBoB,EAAUI,OACVJ,EAAUK,UAAUzB,IAGxBe,GACKW,MAAM,SAACC,GAEJA,EAAEC,gBACF,IAAIC,GAAQX,EAASY,MACjBC,EAAeF,EAAMG,MAAM,gCAE3BD,IAEAb,EAASe,YAAY,eACrBrB,EAAeY,OACfV,EAAaD,OACbF,EAAeuB,KAAK,IAEpBd,EAAUe,QAEV3B,EAAE4B,MACEC,KAAM,OACNC,IAAKtB,EACLuB,MACID,IAAKT,EACLW,aAAclB,EAASkB,cAE3BC,QAAS,SAACC,GAEFA,GAEA/B,EAAeuB,KAAKQ,GACpB9B,EAAeC,OACfC,EAAaU,OACbN,EAASyB,SAAS,iBAIlB/B,EAAeC,OACfC,EAAaU,OAEbJ,EAAUwB,mBAGlBC,MAAO,WAEHjC,EAAeC,OACfC,EAAaU,OACbN,EAASyB,SAAS,eAElBvB,EAAUP,WAMlBK,EAASyB,SAAS,iBAI9BnC,EAAE,eACGkB,MAAM,WAEHP,EAAYK,MACZ,IAAIsB,GAAuBtC,EAAEuC,MAAM9B,KAAK,sBACpC+B,EAAKxC,EAAEsC,EACXtC,GAAE4B,MACEC,KAAM7B,EAAEuC,MAAM9B,KAAK,oBACnBqB,IAAK9B,EAAEuC,MAAM9B,KAAK,YAClBwB,QAAS,SAAAd,GAELR,EAAYN,OACZmC,EAAGd,KAAKP,GAGRtB,EAAA4C,YAAYC,UAAUJ,EAAe,cAAe,qBAKpE,IAAIK,GAAmB1C,SAAS2C,cAAc,oBAC9CD,GAAiBE,iBAAiB,QAC9B,SAACC,GAEGA,EAAI1B,gBACJ,IAAI2B,GAAc/C,EAAE8C,EAAIE,OAExB,IAAID,EAAYE,GAAG,MACqB,aAApCF,EAAYtC,KAAK,gBACmB,SAApCsC,EAAYtC,KAAK,eACrB,CACI,GAAIyC,GAAQH,EAAYtC,KAAK,QACzB0C,EAAMJ,EAAYtC,KAAK,WAE3Bd,GAAAyD,KAAKC,IAAIzD,EAAM0D,WAAWC,KACtBJ,GAEIK,aAAcN,EAAMO,MAAM,GAC1BC,WAAY,GAEhB,SAACC,GAEG3D,EAAEkD,GAAOxB,KAAKiC,GAEdZ,EAAYtC,KAAK,cAAe,SAGhCZ,EAAA4C,YAAYC,UAAUQ,EAAQ,cAAe,yBFmBnE,SAAS9D,EAAQD,EAASH,GAG/B,YG1JD,IAAYY,GAAKZ,EAAM,GAEvBoE,EAAA,mBAAAA,MAcA,MAZWA,GAAAC,IAAP,SAA6BO,EACzB9B,EACAC,EACA8B,GAEA7D,EAAE4B,MACEC,KAAMjC,EAAM0D,WAAWM,GACvB9B,IAAKA,EACLC,KAAMA,IAEL+B,KAAKD,IAElBT,IAdajE,GAAAiE,KAAIA,GH4KX,SAAShE,EAAQD,GAEtB,cIlLD,SAAYmE,GAERA,IAAA,aACAA,IAAA,eACAA,IAAA,aACAA,IAAA,oBALQnE,EAAAmE,aAAAnE,EAAAmE,eAAAnE,GAAAmE,YAQZ,SAAYS,GAERA,IAAA,iBACAA,IAAA,eACAA,IAAA,uBACAA,IAAA,gBALQ5E,EAAA4E,mBAAA5E,EAAA4E,qBAAA5E,GAAA4E,kBJ6LN,SAAS3E,EAAQD,EAASH,GAE/B,YKvMD,IAAAgF,GAAAhF,EAAiC,GACrBiF,EAAIjF,EAAM,GAEtByD,EAAA,mBAAAA,MA0BA,MAxBWA,GAAAC,UAAP,SAAiBwB,EAAkB5B,GAG/B,GAAI6B,EACJ,KAEIA,EAAQ,GAAIF,GAAKG,MAAMF,GAE3B,MAAO/C,GAEH,OAGJ,GAAIkD,GAAY,GAAIL,GAAAM,iBAAiBH,EAAO7B,EAC5C6B,GAAMI,QAAQrD,MAAQ,WAElBmD,EAAUG,gBAAgBL,EAAMI,UAGpCJ,EAAMM,YAAYvD,MAAQ,WAEtBmD,EAAUG,gBAAgBL,EAAMM,eAG5ChC,IA1BatD,GAAAsD,YAAWA,GLkOlB,SAASrD,EAAQD,EAASH,GAE/B,YMtOD,IAAAW,GAAAX,EAAmB,GACPY,EAAKZ,EAAM,GAGvBsF,EAAA,WAKI,QAAAA,GAAYH,EAAmB7B,GAE3BC,KAAK4B,MAAQA,EACb5B,KAAKD,aAAeA,EA+B5B,MA5BIgC,GAAAI,UAAAF,gBAAA,SAAgBG,GAAhB,GAAAC,GAAArC,IAEI,IAAKoC,EAASE,UAAd,CAGA,GAAIC,EAIAA,GAHCH,EAASI,OAGGvB,aAAcmB,EAASI,MAAOrB,WAAYiB,EAASjB,aAFnDA,WAAYiB,EAASjB,YAItC/D,EAAAyD,KAAKC,IAAIzD,EAAM0D,WAAWC,KACtBoB,EAAS7C,IACTgD,EACA,SAACE,GAEGhF,EAAE4E,EAAKtC,cAAcZ,KAAKsD,EAAQC,gBAClCL,EAAKM,oBAAoBF,OAI7BV,EAAAI,UAAAQ,oBAAR,SAA4BC,GAExB5C,KAAK4B,MAAMM,YAAYf,WAAayB,EAAMC,aAAaC,mBACvD9C,KAAK4B,MAAMM,YAAYI,WAAaM,EAAMC,aAAaE,YACvD/C,KAAK4B,MAAMI,QAAQb,WAAayB,EAAMC,aAAaG,eACnDhD,KAAK4B,MAAMI,QAAQM,WAAaM,EAAMC,aAAaI,YAE3DlB,IAvCanF,GAAAmF,iBAAgBA,GNqQvB,SAASlF,EAAQD,EAASH,GAG/B,YO3QD,IAAYY,GAAKZ,EAAM,GAEvByG,EAAA,WAII,QAAAA,GAAYC,GAERnD,KAAKmD,QAAU1F,EAAE0F,GA4CzB,MAzCIC,QAAAC,eAAIH,EAAAf,UAAA,SPuQCmB,IOvQL,SAAUxE,GAENkB,KAAKmD,QAAQxE,MAAMG,IPwQlByE,YAAY,EACZC,cAAc,IOtQnBJ,OAAAC,eAAIH,EAAAf,UAAA,aPyQCsB,IOlQL,WAEI,OAAQzD,KAAKmD,QAAQO,SAASC,SAAS,aPmQtCL,IO5QL,SAAcxE,GAENA,EACAkB,KAAKmD,QAAQO,SAASxE,YAAY,YAElCc,KAAKmD,QAAQO,SAAS9D,SAAS,aP6QlC2D,YAAY,EACZC,cAAc,IOvQnBJ,OAAAC,eAAIH,EAAAf,UAAA,QP0QCsB,IO1QL,WAGI,MAAOpG,GAAMmE,iBAAiBxB,KAAKmD,QAAQjF,KAAK,eP0Q/CqF,YAAY,EACZC,cAAc,IOxQnBJ,OAAAC,eAAIH,EAAAf,UAAA,cP2QCsB,IO3QL,WAEI,OAAQzD,KAAKmD,QAAQjF,KAAK,qBP4QzBoF,IO1QL,SAAexE,GAEXkB,KAAKmD,QAAQjF,KAAK,mBAAoBY,IP2QrCyE,YAAY,EACZC,cAAc,IOzQnBJ,OAAAC,eAAIH,EAAAf,UAAA,OP4QCsB,IO5QL,WAEI,MAAOzD,MAAKmD,QAAQjF,KAAK,SP6QxBqF,YAAY,EACZC,cAAc,IO3QnBJ,OAAAC,eAAIH,EAAAf,UAAA,SP8QCsB,IO9QL,WAEI,MAAOzD,MAAKmD,QAAQjF,KAAK,wBP+QxBqF,YAAY,EACZC,cAAc,IO9QvBN,IAlDatG,GAAAsG,SAAQA,CAoDrB,IAAArB,GAAA,WAMI,QAAAA,GAAYF,GAER3B,KAAK2B,SAAWA,EAChB3B,KAAK4D,iBAAiBjC,GA0B9B,MAvBYE,GAAAM,UAAAyB,iBAAR,SAAyBjC,GAAzB,GAAAU,GAAArC,KAEQ6D,EAAUpG,EAAEkE,EAChB,IAAuB,IAAnBkC,EAAQC,OAiBR,KAAM,0CAfND,GAAQE,KAAK,SAACC,EAAeC,GAEzB,OAAQ5G,EAAMmE,iBAAiB/D,EAAEwG,GAAM/F,KAAK,eAExC,IAAKb,GAAMmE,iBAAiB0C,KACxB7B,EAAKL,QAAU,GAAIkB,GAASe,EAC5B,MACJ,KAAK5G,GAAMmE,iBAAiB2C,SACxB9B,EAAKH,YAAc,GAAIgB,GAASe,OAUxDpC,IAnCajF,GAAAiF,MAAKA,GPgTZ,SAAShF,EAAQD,EAASH,GAE/B,YQ1WD,IAAY2H,GAAK3H,EAAM,GAChB4H,EAAwBD,EAAMC,sBAErCC,EAAA7H,EAA+B,GAC/B8H,EAAA9H,EAA+B,IAE/B6B,EAAA,WAOI,QAAAA,GAAYkG,EAAiBC,GALrBzE,KAAA0E,UAAW,EAOf1E,KAAK4C,MAAQ,GAAIyB,GACjBrE,KAAK2E,eAAiB,GAAIL,GAAAM,eAAeJ,EAASxE,KAAK4C,OACvD5C,KAAK6E,eAAiB,GAAIN,GAAAO,eAAeL,EAAkBzE,KAAK4C,OA8CxE,MA3CItE,GAAA6D,UAAAzD,UAAA,SAAUkE,GAEN5C,KAAK+E,OAAOnC,GACZ5C,KAAK4C,MAAMoC,KAAKpC,GAChB5C,KAAK2E,eAAeM,QAAQrC,GAC5B5C,KAAK6E,eAAeI,QAAQrC,IAGhCtE,EAAA6D,UAAA/C,MAAA,WAEIY,KAAK4C,MAAMsC,WACXlF,KAAK6E,eAAeM,QACpBnF,KAAK2E,eAAeQ,SAGxB7G,EAAA6D,UAAAtC,eAAA,WAEIG,KAAK4C,MAAMwC,uBACXpF,KAAK2E,eAAeM,UACpBjF,KAAK6E,eAAeI,WAGxB3G,EAAA6D,UAAA1D,KAAA,WAESuB,KAAK0E,WACV1E,KAAK2E,eAAelG,OACpBuB,KAAK6E,eAAepG,OACpBuB,KAAK0E,UAAW,IAGpBpG,EAAA6D,UAAArE,KAAA,WAEQkC,KAAK0E,WACT1E,KAAK2E,eAAe7G,OACpBkC,KAAK6E,eAAe/G,OACpBkC,KAAK0E,UAAW,IAGZpG,EAAA6D,UAAA4C,OAAR,SAAenC,GAEXA,EAAMyC,SAAWzC,EAAMyC,QAAQC,QAAQ,GACvC1C,EAAM2C,SAAW3C,EAAM2C,QAAQD,QAAQ,IAE/ChH,IAzDa1B,GAAA0B,UAASA,GRkiBhB,SAASzB,EAAQD,GAEtB,YS1iBD,IAAAyH,GAAA,WAII,QAAAA,GAAYzB,GAER5C,KAAKkF,QAAUtC,EAmBvB,MAhBIyB,GAAAlC,UAAAiD,qBAAA,WAEI,GAAII,GAAQxF,KAAKkF,QAAQO,OACzBzF,MAAK0F,YACL1F,KAAKkF,QAAQS,QAAQH,IAGzBnB,EAAAlC,UAAAuD,UAAA,WAEI1F,KAAKkF,QAAQU,KAAK,SAACC,EAAGC,GAAM,MAAAD,GAAER,QAAUS,EAAET,WAG9ChB,EAAAlC,UAAA6C,KAAA,SAAKlG,GAEDkB,KAAKkF,QAAQF,KAAKlG,IAE1BuF,IAzBazH,GAAAyH,sBAAqBA,CA2BlC,IAAA0B,GAAA,mBAAAA,MAIA,MAAAA,KAJanJ,GAAAmJ,kBAAiBA,CAM9B,IAAAC,GAAA,mBAAAA,MAGA,MAAAA,KAHapJ,GAAAoJ,YAAWA,CAKxB,IAAAC,GAAA,mBAAAA,MAMA,MAAAA,KANarJ,GAAAqJ,aAAYA,GT6iBnB,SAASpJ,EAAQD,EAASH,GAE/B,YACA,IAAIyJ,GAAalG,MAAQA,KAAKkG,WAAc,SAAUC,EAAGL,GAErD,QAASM,KAAOpG,KAAKqG,YAAcF,EADnC,IAAK,GAAIhJ,KAAK2I,GAAOA,EAAEQ,eAAenJ,KAAIgJ,EAAEhJ,GAAK2I,EAAE3I,GAEnDgJ,GAAEhE,UAAkB,OAAN2D,EAAa1C,OAAOmD,OAAOT,IAAMM,EAAGjE,UAAY2D,EAAE3D,UAAW,GAAIiE,KUzlBpFI,EAAA/J,EAAiC,GACjCgK,EAAAhK,EAAsB,IAKtBmI,EAAA,SAAA8B,GAKI,QAAA9B,GAAY+B,EAAwB/D,GAEhC8D,EAAA1J,KAAAgD,KAAM2G,EAAgB/D,GACtB5C,KAAK4G,UAAU5G,KAAK6G,aACpB7G,KAAK8G,WACL9G,KAAK+G,MAAMR,SAyHnB,MAnIoCL,GAAAtB,EAAA8B,GAatB9B,EAAAzC,UAAA6E,sBAAV,WAEIhH,KAAKiH,iBAAiBjH,KAAKkH,cAC3BlH,KAAK+G,MAAMI,UAGLvC,EAAAzC,UAAAiF,sBAAV,SAA6DxE,GAEzD5C,KAAKqH,YAAYzE,IAGrBgC,EAAAzC,UAAAgD,MAAA,WAEInF,KAAKsH,WAAa,GAAIC,GACtBvH,KAAKiH,iBAAiBjH,KAAKsH,aAGvB1C,EAAAzC,UAAAqF,iBAAR,SAAyB1I,GAErBkB,KAAKsH,WAAWG,KAAKzC,KAAKlG,EAAMS,KAChCS,KAAKsH,WAAWI,UAAU1C,KAAKlG,EAAMuG,SACrCrF,KAAKsH,WAAWK,UAAU3C,KAAKlG,EAAMyG,UAGjCX,EAAAzC,UAAAkF,YAAR,SAAoBvI,GAEhBkB,KAAKwH,iBAAiB1I,GACtBkB,KAAK+G,MAAMI,UAGPvC,EAAAzC,UAAA8E,iBAAR,SAAyBW,GAErB5H,KAAK+G,MAAMvH,KAAK,GAAGqI,EAAID,EAAaH,KACpCzH,KAAK+G,MAAMvH,KAAK,GAAGqI,EAAID,EAAaH,KACpCzH,KAAK+G,MAAMvH,KAAK,GAAGsI,EAAIF,EAAaD,UACpC3H,KAAK+G,MAAMvH,KAAK,GAAGsI,EAAIF,EAAaF,WAGhC9C,EAAAzC,UAAA+E,WAAR,WAGI,IAAiB,GADba,GAAkB,GAAIR,GACTS,EAAA,EAAAC,EAAAjI,KAAK4C,MAAMsC,QAAX8C,EAAAC,EAAAnE,OAAAkE,IAAmB,CAA/B,GAAIE,GAAID,EAAAD,EAETD,GAAIN,KAAKzC,KAAKkD,EAAK3I,KACnBwI,EAAIL,UAAU1C,KAAKkD,EAAK7C,SACxB0C,EAAIJ,UAAU3C,KAAKkD,EAAK3C,SAE5B,MAAOwC,IAGHnD,EAAAzC,UAAA2E,SAAR,WAEI9G,KAAKsH,WAAa,GAAIC,EAEtB,IAAIY,IACAN,EAAG7H,KAAKsH,WAAWG,KACnBK,EAAG9H,KAAKsH,WAAWK,UACnBS,KAAM,MACN9I,KAAM,MACN+I,QAAUC,MAAO,qBAEjBC,GACAV,EAAG7H,KAAKsH,WAAWG,KACnBK,EAAG9H,KAAKsH,WAAWI,UACnBU,KAAM,MACN9I,KAAM,MACN+I,QAAUC,MAAO,sBAEjB9I,GAAQ2I,EAAQI,EACpBvI,MAAK+G,MAAMvH,KAAOA,GAGdoF,EAAAzC,UAAAyE,UAAR,SAAkB4B,GAEd,GAAIC,GAAYhL,EAAE+K,GACdE,EAAI,IACJC,EAAI,GAERF,GAAU3K,OAEVkC,KAAK+G,MAAQ,GAAIN,GAAAmC,KACjB,IAAIC,IACAC,MACIC,OAAQ,mEACRT,MAAO,QAEXU,MAAO,oBACPC,QAAS,UACTC,UAAU,EACVC,MAAOT,EACPU,OAAQT,EACRU,OACIL,MAAO,OACPM,gBAAgB,EAChBC,WAAW,GAEfC,OACIR,MAAO,WACPO,WAAW,EACXE,WACIC,KAAM,GACNpB,MAAO,sBAEXqB,UACID,KAAM,GACNpB,MAAO,uBAGfsB,QACI/B,EAAG,EACHC,EAAG,EACH+B,QAAS,yBACTC,YAAa,0BAGrB9J,MAAK+G,MAAM8B,OAASA,EACpB7I,KAAK+G,MAAMgD,cAAgBvB,GAEnC5D,GAnIoC4B,EAAAwD,iBAAvBpN,GAAAgI,eAAcA,CAqI3B,IAAA2C,GAAA,WAEI,QAAAA,KAEIvH,KAAKyH,QACLzH,KAAK0H,aACL1H,KAAK2H,aAMb,MAAAJ,OVgkBM,SAAS1K,EAAQD,GAEtB,YWztBD,IAAAoN,GAAA,WAKI,QAAAA,GAAYC,EAAmBrH,GAE3B5C,KAAK6G,YAA2BnJ,SAAS2C,cAAc4J,GACvDjK,KAAK4C,MAAQA,EA2BrB,MAxBIoH,GAAA7H,UAAA8C,QAAA,SAAWrC,GAEHA,EAEA5C,KAAKoH,sBAAsBxE,GAI3B5C,KAAKgH,yBAIbgD,EAAA7H,UAAA1D,KAAA,WAEIuB,KAAK6G,YAAYqD,MAAMjF,QAAU,SAGrC+E,EAAA7H,UAAArE,KAAA,WAEIkC,KAAK6G,YAAYqD,MAAMjF,QAAU,QAKzC+E,IAnCsBpN,GAAAoN,iBAAgBA,GXovBhC,SAASnN,EAAQD,GAEtB,YYtvBD,IAAAgM,GAAA,mBAAAA,MAeA,MATIA,GAAAzG,UAAAoE,OAAA,WAEI4D,OAAOC,QAAQpK,KAAK+J,cAAe/J,KAAKR,KAAMQ,KAAK6I,SAGvDD,EAAAzG,UAAAgF,OAAA,WAEIgD,OAAOE,OAAOrK,KAAK+J,gBAE3BnB,IAfahM,GAAAgM,MAAKA,GZuwBZ,SAAS/L,EAAQD,EAASH,GAE/B,YACA,IAAIyJ,GAAalG,MAAQA,KAAKkG,WAAc,SAAUC,EAAGL,GAErD,QAASM,KAAOpG,KAAKqG,YAAcF,EADnC,IAAK,GAAIhJ,KAAK2I,GAAOA,EAAEQ,eAAenJ,KAAIgJ,EAAEhJ,GAAK2I,EAAE3I,GAEnDgJ,GAAEhE,UAAkB,OAAN2D,EAAa1C,OAAOmD,OAAOT,IAAMM,EAAGjE,UAAY2D,EAAE3D,UAAW,GAAIiE,Ka7wBpFI,EAAA/J,EAAiC,GAErB6N,EAAK7N,EAAM,IAIvBqI,EAAA,SAAA4B,GAII,QAAA5B,GAAYL,EAA0B7B,GAElC8D,EAAA1J,KAAAgD,KAAMyE,EAAkB7B,GACxB5C,KAAKuK,iBAiCb,MAxCoCrE,GAAApB,EAAA4B,GAUxB5B,EAAA3C,UAAAoI,eAAR,WAEI,GAAIC,IAAW,MAAO,UAAW,WAC7BC,GAAS,MAAO,UAAW,WAC3BC,EAAQ,GAAIJ,GAAMK,oBAAoBH,EAASC,EAEnDzK,MAAK4K,WAAa,GAAIN,GAAMO,WAAW7K,KAAK6G,YAAa6D,GACzD1K,KAAK4K,WAAWE,WAAa,mCAC7B9K,KAAK4K,WAAWG,0BAGVjG,EAAA3C,UAAA6E,sBAAV,WAEIhH,KAAK4K,WAAWI,mBAAqB,EACrChL,KAAK4K,WAAWK,cAAcjL,KAAK4C,MAAMsC,SACzClF,KAAK4K,WAAWI,mBAAqB,GAG/BlG,EAAA3C,UAAAiF,sBAAV,SAA6DxE,GAEzD5C,KAAK4K,WAAWM,OAAOtI,IAG3BkC,EAAA3C,UAAAgD,MAAA,WAEI,GAAIgG,GAAQnL,KAAK4K,WAAWQ,aAAaC,SAAS,EAC9CF,KACAA,EAAMG,UAAY,IACtBtL,KAAK4K,WAAWW,aAExBzG,GAxCoC0B,EAAAwD,iBAAvBpN,GAAAkI,eAAcA,Gb8yBrB,SAASjI,EAAQD,GAEtB,YctzBD,IAAAiO,GAAA,WAUI,QAAAA,GAAYW,EAA8Bd,GAEtC1K,KAAKyL,cAAe,EACpBzL,KAAK0K,MAAQA,EACb1K,KAAKwL,eAAiBA,EACtBxL,KAAKgL,mBAAqB,EA6GlC,MA1GYH,GAAA1I,UAAAuJ,cAAR,WAEI,GAAIC,GAAS,EAOb,OANAA,IAAU,OAEVA,GAAU3L,KAAK4L,qBAEfD,GAAU,SAKNd,EAAA1I,UAAAyJ,mBAAR,WAII,IAAiB,GAFbD,GAAS3L,KAAKyL,aAAe,aAAe,GAE/BzD,EAAA,EAAAC,EAAAjI,KAAK0K,MAAMmB,KAAX7D,EAAAC,EAAAnE,OAAAkE,IAAgB,CAA5B,GAAIE,GAAID,EAAAD,EAET2D,IAAU,OAASzD,EAAK4D,WAAa,QAGzC,MAAOH,IAGHd,EAAA1I,UAAA4J,aAAR,SAAqBnJ,GAEjB,GAAIoJ,GAA2BtO,SAASuO,cAAc,KAEtD,OADAD,GAAIV,UAAYtL,KAAK0K,MAAQ1K,KAAKkM,qBAAqBtJ,GAAS5C,KAAKmM,uBAAuBvJ,GACrFoJ,GAGHnB,EAAA1I,UAAAiK,mBAAR,SAA2BC,GAEvB,MAAO,IAAGA,EAAa,SAASA,EAAe,KAG3CxB,EAAA1I,UAAAmK,QAAR,SAAgB1J,GAEZ,IAAiB,GAAAoF,GAAA,EAAAuE,EAAA3J,EAAAoF,EAAAuE,EAAAzI,OAAAkE,IAAM,CAAlB,GAAIE,GAAIqE,EAAAvE,EAEThI,MAAKkL,OAAOhD,KAIpB2C,EAAA1I,UAAA8I,cAAA,SAAcrI,EAAsB4J,GAEhC,OAFgC,SAAAA,MAAOC,EAAcC,SAE7CF,GAEJ,IAAKC,GAAcE,OACf3M,KAAKsM,QAAQ1J,EACb,MACJ,KAAK6J,GAAcC,QACf1M,KAAKoL,aAAaE,UAAY,GAC9BtL,KAAKuL,YACLvL,KAAKsM,QAAQ1J,KAKzBiI,EAAA1I,UAAA+I,OAAA,SAAOtI,GAEH5C,KAAKoL,aAAaC,SAAS,GAAGuB,YAAY5M,KAAK+L,aAAanJ,KAGhEiI,EAAA1I,UAAAoJ,UAAA,WAEIvL,KAAKoL,aAAaE,UAAYtL,KAAK0L,iBAGvCb,EAAA1I,UAAA4I,uBAAA,SAAuBS,GAEnB,GAAI/C,GAAY+C,GAAkBxL,KAAKwL,cACvC,KAAK/C,EACD,KAAUoE,OAAM,qEAEpB,IAAIC,GAAQpP,SAASuO,cAAc,QAC/BjM,MAAK8K,aACLgC,EAAMC,UAAY/M,KAAK8K,YAC3B9K,KAAKoL,aAAe0B,EACpBrE,EAAUmE,YAAYE,IAGlBjC,EAAA1I,UAAAgK,uBAAR,SAA+BvJ,GAE3B,GAAI+I,GAAS3L,KAAKgN,eAClB,KAAK,GAAIC,KAAYrK,GAEjB+I,GAAU,OAAO/I,EAAMqK,GAAS,OAEpC,OAAOtB,IAGHd,EAAA1I,UAAA+J,qBAAR,SAA6BtJ,GAGzB,IAAiB,GADb+I,GAAS3L,KAAKgN,gBACDhF,EAAA,EAAAC,EAAAjI,KAAK0K,MAAMmB,KAAX7D,EAAAC,EAAAnE,OAAAkE,IAAgB,CAA5B,GAAIE,GAAID,EAAAD,EAET2D,IAAU,OAAO/I,EAAMsF,EAAKgF,cAAa,QAE7C,MAAOvB,IAGHd,EAAA1I,UAAA6K,cAAR,WAEI,MAAOhN,MAAKyL,aAAe,OAAOzL,KAAKgL,sBAAoB,QAAU,IAE7EH,IA5HajO,GAAAiO,WAAUA,EA8HvB,SAAY4B,GACRA,IAAA,qBACAA,IAAA,oBAFQ7P,EAAA6P,gBAAA7P,EAAA6P,kBAAZ,IAAYA,GAAA7P,EAAA6P,cAKZ9B,EAAA,WAII,QAAAA,GAAYH,EAAoB2C,GAE5BnN,KAAK6L,QACDrB,GAAW2C,GACXnN,KAAKoN,OAAO5C,EAAS2C,GAajC,MAVIxC,GAAAxI,UAAAiL,OAAA,SAAO5C,EAAmB2C,GAEtB,GAAI3C,EAAQ1G,SAAWqJ,EAAWrJ,OAC9B,KAAU+I,OAAM,mCAEpB,KAAK,GAAIQ,GAAI,EAAGA,EAAI7C,EAAQ1G,OAAQuJ,IAEhCrN,KAAK6L,KAAK7G,KAAK,GAAIsI,GAAe9C,EAAQ6C,GAAIF,EAAWE,MAGrE1C,IArBa/N,GAAA+N,oBAAmBA,CAuBhC,IAAA2C,GAAA,WAEI,QAAAA,GAAYxB,EAAoBoB,GAE5BlN,KAAK8L,WAAaA,EAClB9L,KAAKkN,aAAeA,EAK5B,MAAAI,KAVa1Q,GAAA0Q,eAAcA,GdoxBrB,SAASzQ,EAAQD,GAEtB,Yeh7BD,IAAA4B,GAAA,WAGI,QAAAA,GAAY+O,GAER,GAAIhP,GAAWd,EAAE+P,WAAWC,eAC5BlP,GAASmP,OAAOC,eAAiBJ,CACjC,IAAIK,GAAM5N,IACVvC,GAAE+P,WAAWK,IAAIC,QAAQvM,KAAK,WAE1BqM,EAAInO,aAAehC,EAAE+P,WAAWK,IAAI/Q,KAGhD,MAAA0B,KAba5B,GAAA4B,SAAQA","file":"index.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../typings/jquery/jquery.d.ts\" />\r\n\t\"use strict\";\r\n\tvar ajax_1 = __webpack_require__(1);\r\n\tvar Enums = __webpack_require__(2);\r\n\tvar initializer_1 = __webpack_require__(3);\r\n\tvar displayer_1 = __webpack_require__(6);\r\n\tvar signalR_1 = __webpack_require__(13);\r\n\t$(document)\r\n\t    .ready(function () {\r\n\t    var inputUrlErorrs = $(\"#inputUrlErorrs\");\r\n\t    var startBtnWaiter = $(\"#startTestWaiter\");\r\n\t    startBtnWaiter.hide();\r\n\t    var stBtnDefText = $(\"#startTestDefaultText\");\r\n\t    var startBtn = $(\"#startTestBtn\");\r\n\t    var testTrovider = startBtn.attr('data-url');\r\n\t    var inputUrl = $(\"#input_url\");\r\n\t    var modalWaiter = $(\"#modalWaiter\");\r\n\t    modalWaiter.hide();\r\n\t    var displayer = new displayer_1.Displayer(\"#chartContainer\", \"#tableContainer\");\r\n\t    var notifier = new signalR_1.Notifier(function (m) {\r\n\t        displayer.show();\r\n\t        displayer.visualize(m);\r\n\t    });\r\n\t    startBtn\r\n\t        .click(function (e) {\r\n\t        e.preventDefault();\r\n\t        var value = inputUrl.val();\r\n\t        var isValueValid = value.match(/^(ftp|http|https):\\/\\/[^ \"]+$/);\r\n\t        if (isValueValid) {\r\n\t            inputUrl.removeClass(\"field-error\");\r\n\t            startBtnWaiter.show();\r\n\t            stBtnDefText.hide();\r\n\t            inputUrlErorrs.html(\"\");\r\n\t            displayer.clean();\r\n\t            $.ajax({\r\n\t                type: \"POST\",\r\n\t                url: testTrovider,\r\n\t                data: {\r\n\t                    url: value,\r\n\t                    connectionId: notifier.connectionId\r\n\t                },\r\n\t                success: function (v) {\r\n\t                    if (v) {\r\n\t                        inputUrlErorrs.html(v);\r\n\t                        startBtnWaiter.hide();\r\n\t                        stBtnDefText.show();\r\n\t                        inputUrl.addClass(\"field-error\");\r\n\t                    }\r\n\t                    else {\r\n\t                        startBtnWaiter.hide();\r\n\t                        stBtnDefText.show();\r\n\t                        displayer.sortAndDisplay();\r\n\t                    }\r\n\t                },\r\n\t                error: function () {\r\n\t                    startBtnWaiter.hide();\r\n\t                    stBtnDefText.show();\r\n\t                    inputUrl.addClass(\"field-error\");\r\n\t                    displayer.hide();\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t        else {\r\n\t            inputUrl.addClass(\"field-error\");\r\n\t        }\r\n\t    });\r\n\t    $(\"#historyBtn\")\r\n\t        .click(function () {\r\n\t        modalWaiter.show();\r\n\t        var updateTarget = $(this).attr('data-update-custom');\r\n\t        var el = $(updateTarget);\r\n\t        $.ajax({\r\n\t            type: $(this).attr('data-ajax-method'),\r\n\t            url: $(this).attr('data-url'),\r\n\t            success: function (e) {\r\n\t                modalWaiter.hide();\r\n\t                el.html(e);\r\n\t                // find pager's btn and set handlers\r\n\t                initializer_1.Initializer.pagerInit(updateTarget + \" ul.pager a\", \"#historyTable\");\r\n\t            }\r\n\t        });\r\n\t    });\r\n\t    var historyConteiner = document.querySelector(\"#historyContainer\");\r\n\t    historyConteiner.addEventListener(\"click\", function (arg) {\r\n\t        arg.preventDefault();\r\n\t        var eventSource = $(arg.target);\r\n\t        if (eventSource.is(\"a\") &&\r\n\t            eventSource.attr(\"data-toggle\") === \"collapse\" &&\r\n\t            eventSource.attr(\"data-switch\") === \"true\") {\r\n\t            var rowId_1 = eventSource.attr('href');\r\n\t            var uri = eventSource.attr('data-url');\r\n\t            ajax_1.Ajax.run(Enums.HttpMethod.POST, uri, {\r\n\t                historyRowId: rowId_1.slice(1),\r\n\t                startIndex: 0\r\n\t            }, function (siteMap) {\r\n\t                $(rowId_1).html(siteMap);\r\n\t                eventSource.attr(\"data-switch\", \"false\");\r\n\t                // find pager's btn and set handlers\r\n\t                initializer_1.Initializer.pagerInit(rowId_1 + \" ul.pager a\", \"#sitemapTable\");\r\n\t            });\r\n\t        }\r\n\t    });\r\n\t});\r\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/jquery/jquery.d.ts\" />\r\n\t\"use strict\";\r\n\tvar Enums = __webpack_require__(2);\r\n\tvar Ajax = (function () {\r\n\t    function Ajax() {\r\n\t    }\r\n\t    Ajax.run = function (httpMethodType, url, data, callBackOnDone) {\r\n\t        $.ajax({\r\n\t            type: Enums.HttpMethod[httpMethodType],\r\n\t            url: url,\r\n\t            data: data\r\n\t        })\r\n\t            .done(callBackOnDone);\r\n\t    };\r\n\t    return Ajax;\r\n\t}());\r\n\texports.Ajax = Ajax;\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t(function (HttpMethod) {\r\n\t    HttpMethod[HttpMethod[\"GET\"] = 0] = \"GET\";\r\n\t    HttpMethod[HttpMethod[\"POST\"] = 1] = \"POST\";\r\n\t    HttpMethod[HttpMethod[\"PUT\"] = 2] = \"PUT\";\r\n\t    HttpMethod[HttpMethod[\"DELETE\"] = 3] = \"DELETE\";\r\n\t})(exports.HttpMethod || (exports.HttpMethod = {}));\r\n\tvar HttpMethod = exports.HttpMethod;\r\n\t(function (PagerElementRole) {\r\n\t    PagerElementRole[PagerElementRole[\"First\"] = 1] = \"First\";\r\n\t    PagerElementRole[PagerElementRole[\"Next\"] = 2] = \"Next\";\r\n\t    PagerElementRole[PagerElementRole[\"Previous\"] = 3] = \"Previous\";\r\n\t    PagerElementRole[PagerElementRole[\"Last\"] = 4] = \"Last\";\r\n\t})(exports.PagerElementRole || (exports.PagerElementRole = {}));\r\n\tvar PagerElementRole = exports.PagerElementRole;\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar handlers_1 = __webpack_require__(4);\r\n\tvar View = __webpack_require__(5);\r\n\tvar Initializer = (function () {\r\n\t    function Initializer() {\r\n\t    }\r\n\t    Initializer.pagerInit = function (selector, updateTarget) {\r\n\t        // find pager's btn and set handlers\r\n\t        var pager;\r\n\t        try {\r\n\t            pager = new View.Pager(selector);\r\n\t        }\r\n\t        catch (e) {\r\n\t            return;\r\n\t        }\r\n\t        var pagerAjax = new handlers_1.PagerAjaxHandler(pager, updateTarget);\r\n\t        pager.nextBtn.click = function () {\r\n\t            pagerAjax.sendAjaxRequest(pager.nextBtn);\r\n\t        };\r\n\t        pager.previousBtn.click = function () {\r\n\t            pagerAjax.sendAjaxRequest(pager.previousBtn);\r\n\t        };\r\n\t    };\r\n\t    return Initializer;\r\n\t}());\r\n\texports.Initializer = Initializer;\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar ajax_1 = __webpack_require__(1);\r\n\tvar Enums = __webpack_require__(2);\r\n\tvar PagerAjaxHandler = (function () {\r\n\t    function PagerAjaxHandler(pager, updateTarget) {\r\n\t        this.pager = pager;\r\n\t        this.updateTarget = updateTarget;\r\n\t    }\r\n\t    PagerAjaxHandler.prototype.sendAjaxRequest = function (pagerBtn) {\r\n\t        var _this = this;\r\n\t        if (!pagerBtn.isEnabled)\r\n\t            return;\r\n\t        var ajaxData;\r\n\t        if (!pagerBtn.rowId)\r\n\t            ajaxData = { startIndex: pagerBtn.startIndex };\r\n\t        else\r\n\t            ajaxData = { historyRowId: pagerBtn.rowId, startIndex: pagerBtn.startIndex };\r\n\t        ajax_1.Ajax.run(Enums.HttpMethod.POST, pagerBtn.url, ajaxData, function (newPage) {\r\n\t            $(_this.updateTarget).html(newPage.contentHistory);\r\n\t            _this.pagerBtnStyleToggle(newPage);\r\n\t        });\r\n\t    };\r\n\t    PagerAjaxHandler.prototype.pagerBtnStyleToggle = function (model) {\r\n\t        this.pager.previousBtn.startIndex = model.historyPager.previousStartIndex;\r\n\t        this.pager.previousBtn.isEnabled = !model.historyPager.isFirstPage;\r\n\t        this.pager.nextBtn.startIndex = model.historyPager.nextStartIndex;\r\n\t        this.pager.nextBtn.isEnabled = !model.historyPager.isLastPage;\r\n\t    };\r\n\t    return PagerAjaxHandler;\r\n\t}());\r\n\texports.PagerAjaxHandler = PagerAjaxHandler;\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/// <reference path=\"../../../typings/jquery/jquery.d.ts\" />\r\n\t\"use strict\";\r\n\tvar Enums = __webpack_require__(2);\r\n\tvar PagerBtn = (function () {\r\n\t    function PagerBtn(element) {\r\n\t        this.element = $(element);\r\n\t    }\r\n\t    Object.defineProperty(PagerBtn.prototype, \"click\", {\r\n\t        set: function (value) {\r\n\t            this.element.click(value);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(PagerBtn.prototype, \"isEnabled\", {\r\n\t        get: function () {\r\n\t            return !this.element.parent().hasClass(\"disabled\");\r\n\t        },\r\n\t        set: function (value) {\r\n\t            if (value)\r\n\t                this.element.parent().removeClass(\"disabled\");\r\n\t            else\r\n\t                this.element.parent().addClass(\"disabled\");\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(PagerBtn.prototype, \"role\", {\r\n\t        get: function () {\r\n\t            return Enums.PagerElementRole[this.element.attr(\"data-role\")];\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(PagerBtn.prototype, \"startIndex\", {\r\n\t        get: function () {\r\n\t            return +this.element.attr(\"data-start-index\");\r\n\t        },\r\n\t        set: function (value) {\r\n\t            this.element.attr(\"data-start-index\", value);\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(PagerBtn.prototype, \"url\", {\r\n\t        get: function () {\r\n\t            return this.element.attr(\"href\");\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Object.defineProperty(PagerBtn.prototype, \"rowId\", {\r\n\t        get: function () {\r\n\t            return this.element.attr(\"data-history-row-id\");\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    return PagerBtn;\r\n\t}());\r\n\texports.PagerBtn = PagerBtn;\r\n\tvar Pager = (function () {\r\n\t    function Pager(selector) {\r\n\t        this.selector = selector;\r\n\t        this.getPagerElements(selector);\r\n\t    }\r\n\t    Pager.prototype.getPagerElements = function (selector) {\r\n\t        var _this = this;\r\n\t        var elments = $(selector);\r\n\t        if (elments.length !== 0) {\r\n\t            elments.each(function (index, elem) {\r\n\t                switch (Enums.PagerElementRole[$(elem).attr(\"data-role\")]) {\r\n\t                    case Enums.PagerElementRole.Next:\r\n\t                        _this.nextBtn = new PagerBtn(elem);\r\n\t                        break;\r\n\t                    case Enums.PagerElementRole.Previous:\r\n\t                        _this.previousBtn = new PagerBtn(elem);\r\n\t                        break;\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t        else {\r\n\t            throw \"selector does not indicate page elements\";\r\n\t        }\r\n\t    };\r\n\t    return Pager;\r\n\t}());\r\n\texports.Pager = Pager;\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar Model = __webpack_require__(7);\r\n\tvar MeasurementsViewModel = Model.MeasurementsViewModel;\r\n\tvar chartDisplayer_1 = __webpack_require__(8);\r\n\tvar tableDisplayer_1 = __webpack_require__(11);\r\n\tvar Displayer = (function () {\r\n\t    function Displayer(chartId, tableContainerId) {\r\n\t        this.isHidden = true;\r\n\t        this.model = new MeasurementsViewModel();\r\n\t        this.chartDisplayer = new chartDisplayer_1.ChartDisplayer(chartId, this.model);\r\n\t        this.tableDisplayer = new tableDisplayer_1.TableDisplayer(tableContainerId, this.model);\r\n\t    }\r\n\t    Displayer.prototype.visualize = function (model) {\r\n\t        this.format(model);\r\n\t        this.model.push(model);\r\n\t        this.chartDisplayer.display(model);\r\n\t        this.tableDisplayer.display(model);\r\n\t    };\r\n\t    Displayer.prototype.clean = function () {\r\n\t        this.model.results = [];\r\n\t        this.tableDisplayer.clear();\r\n\t        this.chartDisplayer.clear();\r\n\t    };\r\n\t    Displayer.prototype.sortAndDisplay = function () {\r\n\t        this.model.sortModelExceptFirst();\r\n\t        this.chartDisplayer.display();\r\n\t        this.tableDisplayer.display();\r\n\t    };\r\n\t    Displayer.prototype.show = function () {\r\n\t        if (!this.isHidden)\r\n\t            return;\r\n\t        this.chartDisplayer.show();\r\n\t        this.tableDisplayer.show();\r\n\t        this.isHidden = false;\r\n\t    };\r\n\t    Displayer.prototype.hide = function () {\r\n\t        if (this.isHidden)\r\n\t            return;\r\n\t        this.chartDisplayer.hide();\r\n\t        this.tableDisplayer.hide();\r\n\t        this.isHidden = true;\r\n\t    };\r\n\t    Displayer.prototype.format = function (model) {\r\n\t        model.mintime = +model.mintime.toFixed(2);\r\n\t        model.maxtime = +model.maxtime.toFixed(2);\r\n\t    };\r\n\t    return Displayer;\r\n\t}());\r\n\texports.Displayer = Displayer;\r\n\t//class ChartDisplayer2\r\n\t//{\r\n\t//    chart: Chart;\r\n\t//    private modelParts: ResultPack;\r\n\t//    private state: ChartMode;\r\n\t//    private model: MeasurementsViewModel;\r\n\t//    constructor(div: HTMLElement, model: MeasurementsViewModel)\r\n\t//    {\r\n\t//        this.state = ChartMode.Initialize;\r\n\t//        this.model = model;\r\n\t//        this.chartInit(div);\r\n\t//        this.dataInit();\r\n\t//    }\r\n\t//    display(model?: MeasurementResult)\r\n\t//    {\r\n\t//        switch (this.state)\r\n\t//        {\r\n\t//            case ChartMode.Initialize:\r\n\t//                this.initAndDisplay(model);\r\n\t//                this.state = ChartMode.RealTimeUpdate;\r\n\t//                break;\r\n\t//            case ChartMode.RealTimeUpdate:\r\n\t//                this.updateChart(model);\r\n\t//                break;\r\n\t//            case ChartMode.SortAndDisplay:\r\n\t//                this.replaceChartData();\r\n\t//                this.chart.update();\r\n\t//                this.state = ChartMode.RealTimeUpdate;\r\n\t//                break;\r\n\t//        }\r\n\t//    }\r\n\t//    sortAdnDisplay()\r\n\t//    {\r\n\t//        this.state = ChartMode.SortAndDisplay;\r\n\t//        this.display();\r\n\t//    }\r\n\t//    private updateModelParts(value: MeasurementResult)\r\n\t//    {\r\n\t//        this.modelParts.urls.push(value.url);\r\n\t//        this.modelParts.minValues.push(value.mintime);\r\n\t//        this.modelParts.maxValues.push(value.maxtime);\r\n\t//    }\r\n\t//    private initAndDisplay(value: MeasurementResult)\r\n\t//    {\r\n\t//        this.updateModelParts(value);\r\n\t//        //this.chart.show();\r\n\t//        this.chart.create();\r\n\t//    }\r\n\t//    private updateChart(value: MeasurementResult)\r\n\t//    {\r\n\t//        this.updateModelParts(value);\r\n\t//        this.chart.update();\r\n\t//    }\r\n\t//    private replaceChartData()\r\n\t//    {\r\n\t//        let tempModelAsArray = this.splitModel();\r\n\t//        this.chart.data[0].x = tempModelAsArray.urls;\r\n\t//        this.chart.data[1].x = tempModelAsArray.urls;\r\n\t//        this.chart.data[0].y = tempModelAsArray.maxValues;\r\n\t//        this.chart.data[1].y = tempModelAsArray.minValues;\r\n\t//    }\r\n\t//    private splitModel(): ResultPack\r\n\t//    {\r\n\t//        let res: ResultPack = new ResultPack();\r\n\t//        for (let item of this.model.results)\r\n\t//        {\r\n\t//            res.urls.push(item.url);\r\n\t//            res.minValues.push(item.mintime);\r\n\t//            res.maxValues.push(item.maxtime);\r\n\t//        }\r\n\t//        return res;\r\n\t//    }\r\n\t//    private dataInit()\r\n\t//    {\r\n\t//        this.modelParts = new ResultPack();\r\n\t//        let trace1 = {\r\n\t//            x: this.modelParts.urls,\r\n\t//            y: this.modelParts.maxValues,\r\n\t//            name: 'Max',\r\n\t//            type: 'bar',\r\n\t//            marker: { color: 'rgb(55, 83, 109)' }\r\n\t//        };\r\n\t//        let trace2 = {\r\n\t//            x: this.modelParts.urls,\r\n\t//            y: this.modelParts.minValues,\r\n\t//            name: 'Min',\r\n\t//            type: 'bar',\r\n\t//            marker: { color: 'rgb(26, 118, 255)' }\r\n\t//        };\r\n\t//        let data = [trace1, trace2];\r\n\t//        this.chart.data = data;\r\n\t//    }\r\n\t//    private chartInit(divId: HTMLElement)\r\n\t//    {\r\n\t//        this.chart = new Chart();\r\n\t//        let layout = {\r\n\t//            font: {\r\n\t//                family: \"Segoe UI, Times New Roman, Open Sans, verdana, arial, sans-serif\",\r\n\t//                color: '#444'\r\n\t//            },\r\n\t//            title: 'Load Time Results',\r\n\t//            barmode: 'overlay',\r\n\t//            autosize: true,\r\n\t//            xaxis: {\r\n\t//                title: 'Urls',\r\n\t//                showticklabels: false,\r\n\t//                autorange: true\r\n\t//            },\r\n\t//            yaxis: {\r\n\t//                title: 'Time (s)',\r\n\t//                autorange: true,\r\n\t//                titlefont: {\r\n\t//                    size: 16,\r\n\t//                    color: 'rgb(107, 107, 107)'\r\n\t//                },\r\n\t//                tickfont: {\r\n\t//                    size: 14,\r\n\t//                    color: 'rgb(107, 107, 107)'\r\n\t//                }\r\n\t//            },\r\n\t//            legend: {\r\n\t//                x: 0,\r\n\t//                y: 1.0,\r\n\t//                bgcolor: 'rgba(255, 255, 255, 0)',\r\n\t//                bordercolor: 'rgba(255, 255, 255, 0)'\r\n\t//            }\r\n\t//        };\r\n\t//        this.chart.layout = layout;\r\n\t//        this.chart.canvasElement = divId;\r\n\t//    }\r\n\t//}\r\n\t//enum ChartMode\r\n\t//{\r\n\t//    Initialize,\r\n\t//    RealTimeUpdate,\r\n\t//    SortAndDisplay\r\n\t//} \r\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar MeasurementsViewModel = (function () {\r\n\t    function MeasurementsViewModel(model) {\r\n\t        this.results = model;\r\n\t    }\r\n\t    MeasurementsViewModel.prototype.sortModelExceptFirst = function () {\r\n\t        var first = this.results.shift();\r\n\t        this.sortModel();\r\n\t        this.results.unshift(first);\r\n\t    };\r\n\t    MeasurementsViewModel.prototype.sortModel = function () {\r\n\t        this.results.sort(function (a, b) { return a.mintime - b.mintime; });\r\n\t    };\r\n\t    MeasurementsViewModel.prototype.push = function (value) {\r\n\t        this.results.push(value);\r\n\t    };\r\n\t    return MeasurementsViewModel;\r\n\t}());\r\n\texports.MeasurementsViewModel = MeasurementsViewModel;\r\n\tvar MeasurementResult = (function () {\r\n\t    function MeasurementResult() {\r\n\t    }\r\n\t    return MeasurementResult;\r\n\t}());\r\n\texports.MeasurementResult = MeasurementResult;\r\n\tvar HistoryPage = (function () {\r\n\t    function HistoryPage() {\r\n\t    }\r\n\t    return HistoryPage;\r\n\t}());\r\n\texports.HistoryPage = HistoryPage;\r\n\tvar HistoryPager = (function () {\r\n\t    function HistoryPager() {\r\n\t    }\r\n\t    return HistoryPager;\r\n\t}());\r\n\texports.HistoryPager = HistoryPager;\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar elementDisplayer_1 = __webpack_require__(9);\r\n\tvar chart_1 = __webpack_require__(10);\r\n\tvar ChartDisplayer = (function (_super) {\r\n\t    __extends(ChartDisplayer, _super);\r\n\t    function ChartDisplayer(divContainerId, model) {\r\n\t        _super.call(this, divContainerId, model);\r\n\t        this.chartInit(this.htmlElement);\r\n\t        this.dataInit();\r\n\t        this.chart.create();\r\n\t    }\r\n\t    ChartDisplayer.prototype.displayFromLocalModel = function () {\r\n\t        this.replaceChartData(this.splitModel());\r\n\t        this.chart.update();\r\n\t    };\r\n\t    ChartDisplayer.prototype.displayFromOuterModel = function (model) {\r\n\t        this.updateChart(model);\r\n\t    };\r\n\t    ChartDisplayer.prototype.clear = function () {\r\n\t        this.modelParts = new ResultPack();\r\n\t        this.replaceChartData(this.modelParts);\r\n\t    };\r\n\t    ChartDisplayer.prototype.updateModelParts = function (value) {\r\n\t        this.modelParts.urls.push(value.url);\r\n\t        this.modelParts.minValues.push(value.mintime);\r\n\t        this.modelParts.maxValues.push(value.maxtime);\r\n\t    };\r\n\t    ChartDisplayer.prototype.updateChart = function (value) {\r\n\t        this.updateModelParts(value);\r\n\t        this.chart.update();\r\n\t    };\r\n\t    ChartDisplayer.prototype.replaceChartData = function (modelAsArray) {\r\n\t        this.chart.data[0].x = modelAsArray.urls;\r\n\t        this.chart.data[1].x = modelAsArray.urls;\r\n\t        this.chart.data[0].y = modelAsArray.maxValues;\r\n\t        this.chart.data[1].y = modelAsArray.minValues;\r\n\t    };\r\n\t    ChartDisplayer.prototype.splitModel = function () {\r\n\t        var res = new ResultPack();\r\n\t        for (var _i = 0, _a = this.model.results; _i < _a.length; _i++) {\r\n\t            var item = _a[_i];\r\n\t            res.urls.push(item.url);\r\n\t            res.minValues.push(item.mintime);\r\n\t            res.maxValues.push(item.maxtime);\r\n\t        }\r\n\t        return res;\r\n\t    };\r\n\t    ChartDisplayer.prototype.dataInit = function () {\r\n\t        this.modelParts = new ResultPack();\r\n\t        var trace1 = {\r\n\t            x: this.modelParts.urls,\r\n\t            y: this.modelParts.maxValues,\r\n\t            name: 'Max',\r\n\t            type: 'bar',\r\n\t            marker: { color: 'rgb(55, 83, 109)' }\r\n\t        };\r\n\t        var trace2 = {\r\n\t            x: this.modelParts.urls,\r\n\t            y: this.modelParts.minValues,\r\n\t            name: 'Min',\r\n\t            type: 'bar',\r\n\t            marker: { color: 'rgb(26, 118, 255)' }\r\n\t        };\r\n\t        var data = [trace1, trace2];\r\n\t        this.chart.data = data;\r\n\t    };\r\n\t    ChartDisplayer.prototype.chartInit = function (divId) {\r\n\t        var container = $(divId);\r\n\t        var w = 975;\r\n\t        var h = 450;\r\n\t        // hide the char container element\r\n\t        container.hide();\r\n\t        this.chart = new chart_1.Chart();\r\n\t        var layout = {\r\n\t            font: {\r\n\t                family: \"Segoe UI, Times New Roman, Open Sans, verdana, arial, sans-serif\",\r\n\t                color: '#444'\r\n\t            },\r\n\t            title: 'Load Time Results',\r\n\t            barmode: 'overlay',\r\n\t            autosize: true,\r\n\t            width: w,\r\n\t            height: h,\r\n\t            xaxis: {\r\n\t                title: 'Urls',\r\n\t                showticklabels: false,\r\n\t                autorange: true\r\n\t            },\r\n\t            yaxis: {\r\n\t                title: 'Time (s)',\r\n\t                autorange: true,\r\n\t                titlefont: {\r\n\t                    size: 16,\r\n\t                    color: 'rgb(107, 107, 107)'\r\n\t                },\r\n\t                tickfont: {\r\n\t                    size: 14,\r\n\t                    color: 'rgb(107, 107, 107)'\r\n\t                }\r\n\t            },\r\n\t            legend: {\r\n\t                x: 0,\r\n\t                y: 1.0,\r\n\t                bgcolor: 'rgba(255, 255, 255, 0)',\r\n\t                bordercolor: 'rgba(255, 255, 255, 0)'\r\n\t            }\r\n\t        };\r\n\t        this.chart.layout = layout;\r\n\t        this.chart.canvasElement = divId;\r\n\t    };\r\n\t    return ChartDisplayer;\r\n\t}(elementDisplayer_1.ElementDisplayer));\r\n\texports.ChartDisplayer = ChartDisplayer;\r\n\tvar ResultPack = (function () {\r\n\t    function ResultPack() {\r\n\t        this.urls = [];\r\n\t        this.minValues = [];\r\n\t        this.maxValues = [];\r\n\t    }\r\n\t    return ResultPack;\r\n\t}());\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar ElementDisplayer = (function () {\r\n\t    function ElementDisplayer(elementId, model) {\r\n\t        this.htmlElement = document.querySelector(elementId);\r\n\t        this.model = model;\r\n\t    }\r\n\t    ElementDisplayer.prototype.display = function (model) {\r\n\t        if (model) {\r\n\t            this.displayFromOuterModel(model);\r\n\t        }\r\n\t        else {\r\n\t            this.displayFromLocalModel();\r\n\t        }\r\n\t    };\r\n\t    ElementDisplayer.prototype.show = function () {\r\n\t        this.htmlElement.style.display = \"block\";\r\n\t    };\r\n\t    ElementDisplayer.prototype.hide = function () {\r\n\t        this.htmlElement.style.display = \"none\";\r\n\t    };\r\n\t    return ElementDisplayer;\r\n\t}());\r\n\texports.ElementDisplayer = ElementDisplayer;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Chart = (function () {\r\n\t    function Chart() {\r\n\t    }\r\n\t    Chart.prototype.create = function () {\r\n\t        Plotly.newPlot(this.canvasElement, this.data, this.layout);\r\n\t    };\r\n\t    Chart.prototype.update = function () {\r\n\t        Plotly.redraw(this.canvasElement);\r\n\t    };\r\n\t    return Chart;\r\n\t}());\r\n\texports.Chart = Chart;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar elementDisplayer_1 = __webpack_require__(9);\r\n\tvar Table = __webpack_require__(12);\r\n\tvar TableDisplayer = (function (_super) {\r\n\t    __extends(TableDisplayer, _super);\r\n\t    function TableDisplayer(tableContainerId, model) {\r\n\t        _super.call(this, tableContainerId, model);\r\n\t        this.tableMakerInit();\r\n\t    }\r\n\t    TableDisplayer.prototype.tableMakerInit = function () {\r\n\t        var headers = [\"Url\", \"Min (s)\", \"Max (s)\"];\r\n\t        var props = [\"url\", \"mintime\", \"maxtime\"];\r\n\t        var maper = new Table.HeaderPropertyMaper(headers, props);\r\n\t        this.tableMaker = new Table.TableMaker(this.htmlElement, maper);\r\n\t        this.tableMaker.tableClass = \"table table-bordered table-hover\";\r\n\t        this.tableMaker.createTabelInContainer();\r\n\t    };\r\n\t    TableDisplayer.prototype.displayFromLocalModel = function () {\r\n\t        this.tableMaker.curentColumnNumber = 1;\r\n\t        this.tableMaker.fillTableFrom(this.model.results);\r\n\t        this.tableMaker.curentColumnNumber = 1;\r\n\t    };\r\n\t    TableDisplayer.prototype.displayFromOuterModel = function (model) {\r\n\t        this.tableMaker.addRow(model);\r\n\t    };\r\n\t    TableDisplayer.prototype.clear = function () {\r\n\t        var tbody = this.tableMaker.tableElement.children[0];\r\n\t        if (tbody)\r\n\t            tbody.innerHTML = '';\r\n\t        this.tableMaker.addHeader();\r\n\t    };\r\n\t    return TableDisplayer;\r\n\t}(elementDisplayer_1.ElementDisplayer));\r\n\texports.TableDisplayer = TableDisplayer;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar TableMaker = (function () {\r\n\t    function TableMaker(tableContainer, maper) {\r\n\t        this.numberColumn = true;\r\n\t        this.maper = maper;\r\n\t        this.tableContainer = tableContainer;\r\n\t        this.curentColumnNumber = 1;\r\n\t    }\r\n\t    TableMaker.prototype.makeHeaderRow = function () {\r\n\t        var result = \"\";\r\n\t        result += \"<tr>\";\r\n\t        result += this.makeHeadersByMaper();\r\n\t        result += \"</tr>\";\r\n\t        return result;\r\n\t    };\r\n\t    TableMaker.prototype.makeHeadersByMaper = function () {\r\n\t        var result = this.numberColumn ? \"<th>#</th>\" : \"\";\r\n\t        for (var _i = 0, _a = this.maper.list; _i < _a.length; _i++) {\r\n\t            var item = _a[_i];\r\n\t            result += \"<th>\" + item.headerName + \"</th>\";\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t    TableMaker.prototype.makeTableRow = function (model) {\r\n\t        var row = document.createElement(\"tr\");\r\n\t        row.innerHTML = this.maper ? this.makeTableDataByMaper(model) : this.makeTableDataByDefault(model);\r\n\t        return row;\r\n\t    };\r\n\t    TableMaker.prototype.makeClassAttribute = function (classValue) {\r\n\t        return \"\" + (classValue ? \"class=\" + classValue : '');\r\n\t    };\r\n\t    TableMaker.prototype.addRows = function (model) {\r\n\t        for (var _i = 0, model_1 = model; _i < model_1.length; _i++) {\r\n\t            var item = model_1[_i];\r\n\t            this.addRow(item);\r\n\t        }\r\n\t    };\r\n\t    TableMaker.prototype.fillTableFrom = function (model, mode) {\r\n\t        if (mode === void 0) { mode = InsertionMode.Replace; }\r\n\t        switch (mode) {\r\n\t            case InsertionMode.Append:\r\n\t                this.addRows(model);\r\n\t                break;\r\n\t            case InsertionMode.Replace:\r\n\t                this.tableElement.innerHTML = '';\r\n\t                this.addHeader();\r\n\t                this.addRows(model);\r\n\t                break;\r\n\t        }\r\n\t    };\r\n\t    TableMaker.prototype.addRow = function (model) {\r\n\t        this.tableElement.children[0].appendChild(this.makeTableRow(model));\r\n\t    };\r\n\t    TableMaker.prototype.addHeader = function () {\r\n\t        this.tableElement.innerHTML = this.makeHeaderRow();\r\n\t    };\r\n\t    TableMaker.prototype.createTabelInContainer = function (tableContainer) {\r\n\t        var container = tableContainer || this.tableContainer;\r\n\t        if (!container)\r\n\t            throw new Error(\"I can not insert a table into nowhere, tableContainer is undefined\");\r\n\t        var table = document.createElement(\"table\");\r\n\t        if (this.tableClass)\r\n\t            table.className = this.tableClass;\r\n\t        this.tableElement = table;\r\n\t        container.appendChild(table);\r\n\t    };\r\n\t    TableMaker.prototype.makeTableDataByDefault = function (model) {\r\n\t        var result = this.addRowCounter();\r\n\t        for (var propName in model) {\r\n\t            result += \"<td>\" + model[propName] + \"</td>\";\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t    TableMaker.prototype.makeTableDataByMaper = function (model) {\r\n\t        var result = this.addRowCounter();\r\n\t        for (var _i = 0, _a = this.maper.list; _i < _a.length; _i++) {\r\n\t            var item = _a[_i];\r\n\t            result += \"<td>\" + model[item.propertyName] + \"</td>\";\r\n\t        }\r\n\t        return result;\r\n\t    };\r\n\t    TableMaker.prototype.addRowCounter = function () {\r\n\t        return this.numberColumn ? \"<td>\" + this.curentColumnNumber++ + \"</td>\" : \"\";\r\n\t    };\r\n\t    return TableMaker;\r\n\t}());\r\n\texports.TableMaker = TableMaker;\r\n\t(function (InsertionMode) {\r\n\t    InsertionMode[InsertionMode[\"Replace\"] = 0] = \"Replace\";\r\n\t    InsertionMode[InsertionMode[\"Append\"] = 1] = \"Append\";\r\n\t})(exports.InsertionMode || (exports.InsertionMode = {}));\r\n\tvar InsertionMode = exports.InsertionMode;\r\n\tvar HeaderPropertyMaper = (function () {\r\n\t    function HeaderPropertyMaper(headers, properties) {\r\n\t        this.list = [];\r\n\t        if (headers && properties)\r\n\t            this.addMap(headers, properties);\r\n\t    }\r\n\t    HeaderPropertyMaper.prototype.addMap = function (headers, properties) {\r\n\t        if (headers.length !== properties.length)\r\n\t            throw new Error(\"Arrays must have the same length\");\r\n\t        for (var i = 0; i < headers.length; i++) {\r\n\t            this.list.push(new HeaderProperty(headers[i], properties[i]));\r\n\t        }\r\n\t    };\r\n\t    return HeaderPropertyMaper;\r\n\t}());\r\n\texports.HeaderPropertyMaper = HeaderPropertyMaper;\r\n\tvar HeaderProperty = (function () {\r\n\t    function HeaderProperty(headerName, propertyName) {\r\n\t        this.headerName = headerName;\r\n\t        this.propertyName = propertyName;\r\n\t    }\r\n\t    return HeaderProperty;\r\n\t}());\r\n\texports.HeaderProperty = HeaderProperty;\r\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Notifier = (function () {\r\n\t    function Notifier(callback) {\r\n\t        var notifier = $.connection.notificationHub;\r\n\t        notifier.client.displayMessage = callback;\r\n\t        var iAm = this;\r\n\t        $.connection.hub.start().done(function () {\r\n\t            iAm.connectionId = $.connection.hub.id;\r\n\t        });\r\n\t    }\r\n\t    return Notifier;\r\n\t}());\r\n\texports.Notifier = Notifier;\r\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 102464530d9a42a5debd","/// <reference path=\"../../typings/jquery/jquery.d.ts\" />\r\n\r\nimport { Ajax } from \"./infrastructure/ajax\"\r\nimport * as Enums from \"./infrastructure/enums\";\r\nimport { Initializer } from \"./infrastructure/initializer\"\r\nimport * as Model from \"./core/model\"\r\nimport { Displayer } from \"./graphics/displayer\"\r\nimport { Notifier } from \"./infrastructure/signalR\"\r\n\r\n$(document)\r\n    .ready(() =>\r\n    {\r\n        let inputUrlErorrs = $(\"#inputUrlErorrs\");\r\n        let startBtnWaiter = $(\"#startTestWaiter\");\r\n        startBtnWaiter.hide();\r\n        let stBtnDefText = $(\"#startTestDefaultText\");\r\n        let startBtn = $(\"#startTestBtn\");\r\n        let testTrovider = startBtn.attr('data-url');\r\n        let inputUrl = $(\"#input_url\");\r\n\r\n        let modalWaiter = $(\"#modalWaiter\");\r\n        modalWaiter.hide();\r\n\r\n        let displayer = new Displayer(\"#chartContainer\", \"#tableContainer\");\r\n\r\n        let notifier = new Notifier((m) =>\r\n        {\r\n            displayer.show();\r\n            displayer.visualize(m);\r\n        });\r\n\r\n        startBtn\r\n            .click((e) =>\r\n            {\r\n                e.preventDefault();\r\n                let value = inputUrl.val();\r\n                let isValueValid = value.match(/^(ftp|http|https):\\/\\/[^ \"]+$/);\r\n\r\n                if (isValueValid)\r\n                {\r\n                    inputUrl.removeClass(\"field-error\");\r\n                    startBtnWaiter.show();\r\n                    stBtnDefText.hide();\r\n                    inputUrlErorrs.html(\"\");\r\n\r\n                    displayer.clean();\r\n\r\n                    $.ajax({\r\n                        type: \"POST\",\r\n                        url: testTrovider,\r\n                        data: {\r\n                            url: value,\r\n                            connectionId: notifier.connectionId\r\n                        },\r\n                        success: (v) =>\r\n                        {\r\n                            if (v)\r\n                            {\r\n                                inputUrlErorrs.html(v);\r\n                                startBtnWaiter.hide();\r\n                                stBtnDefText.show();\r\n                                inputUrl.addClass(\"field-error\");\r\n                            }\r\n                            else\r\n                            {\r\n                                startBtnWaiter.hide();\r\n                                stBtnDefText.show();\r\n\r\n                                displayer.sortAndDisplay();\r\n                            }\r\n                        },\r\n                        error: () =>\r\n                        {\r\n                            startBtnWaiter.hide();\r\n                            stBtnDefText.show();\r\n                            inputUrl.addClass(\"field-error\");\r\n\r\n                            displayer.hide();\r\n                        }\r\n                    });\r\n                }\r\n                else\r\n                {\r\n                    inputUrl.addClass(\"field-error\");\r\n                }\r\n            });\r\n\r\n        $(\"#historyBtn\")\r\n            .click(function ()\r\n            {\r\n                modalWaiter.show();\r\n                let updateTarget: string = $(this).attr('data-update-custom');\r\n                let el = $(updateTarget);\r\n                $.ajax({\r\n                    type: $(this).attr('data-ajax-method'),\r\n                    url: $(this).attr('data-url'),\r\n                    success: e =>\r\n                    {\r\n                        modalWaiter.hide();\r\n                        el.html(e);\r\n\r\n                        // find pager's btn and set handlers\r\n                        Initializer.pagerInit(updateTarget + \" ul.pager a\", \"#historyTable\");\r\n                    }\r\n                });\r\n            });\r\n\r\n        let historyConteiner = document.querySelector(\"#historyContainer\");\r\n        historyConteiner.addEventListener(\"click\",\r\n            (arg: MouseEvent) =>\r\n            {\r\n                arg.preventDefault();\r\n                let eventSource = $(arg.target);\r\n\r\n                if (eventSource.is(\"a\") &&\r\n                    eventSource.attr(\"data-toggle\") === \"collapse\" &&\r\n                    eventSource.attr(\"data-switch\") === \"true\")\r\n                {\r\n                    let rowId = eventSource.attr('href');\r\n                    let uri = eventSource.attr('data-url');\r\n\r\n                    Ajax.run(Enums.HttpMethod.POST,\r\n                        uri,\r\n                        {\r\n                            historyRowId: rowId.slice(1),\r\n                            startIndex: 0\r\n                        },\r\n                        (siteMap: string) =>\r\n                        {\r\n                            $(rowId).html(siteMap);\r\n\r\n                            eventSource.attr(\"data-switch\", \"false\");\r\n\r\n                            // find pager's btn and set handlers\r\n                            Initializer.pagerInit(rowId + \" ul.pager a\", \"#sitemapTable\");\r\n                        });\r\n                }\r\n            });\r\n    });\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./mainIndexView.ts","/// <reference path=\"../../../typings/jquery/jquery.d.ts\" />\r\n\r\nimport * as Enums from \"./enums\";\r\n\r\nexport class Ajax\r\n{\r\n    static run<T, TDoneEventArg>(httpMethodType: Enums.HttpMethod,\r\n        url: string,\r\n        data: T,\r\n        callBackOnDone: JQueryPromiseCallback<TDoneEventArg>)\r\n    {\r\n        $.ajax({\r\n            type: Enums.HttpMethod[httpMethodType],\r\n            url: url,\r\n            data: data\r\n        })\r\n            .done(callBackOnDone);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./infrastructure/ajax.ts","export enum HttpMethod\r\n{\r\n    GET,\r\n    POST,\r\n    PUT,\r\n    DELETE\r\n}\r\n\r\nexport enum PagerElementRole\r\n{\r\n    First = 1,\r\n    Next,\r\n    Previous,\r\n    Last\r\n}\n\n\n// WEBPACK FOOTER //\n// ./infrastructure/enums.ts","import { PagerAjaxHandler } from \"./handlers\";\r\nimport * as View from \"./view\";\r\n\r\nexport class Initializer {\r\n   \r\n    static pagerInit(selector: string, updateTarget: string)\r\n    {\r\n        // find pager's btn and set handlers\r\n        let pager: View.Pager;\r\n        try\r\n        {\r\n            pager = new View.Pager(selector);\r\n        }\r\n        catch (e)\r\n        {\r\n            return;\r\n        }\r\n\r\n        let pagerAjax = new PagerAjaxHandler(pager, updateTarget);\r\n        pager.nextBtn.click = () =>\r\n        {\r\n            pagerAjax.sendAjaxRequest(pager.nextBtn);\r\n        };\r\n\r\n        pager.previousBtn.click = () =>\r\n        {\r\n            pagerAjax.sendAjaxRequest(pager.previousBtn);\r\n        };\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./infrastructure/initializer.ts","import * as Model from \"../core/model\";\r\nimport {Ajax} from \"./ajax\"\r\nimport * as Enums from \"./enums\";\r\nimport * as View from \"./view\";\r\n\r\nexport class PagerAjaxHandler\r\n{\r\n    pager: View.Pager;\r\n    updateTarget: string;\r\n\r\n    constructor(pager: View.Pager, updateTarget: string)\r\n    {\r\n        this.pager = pager;\r\n        this.updateTarget = updateTarget;\r\n    }\r\n\r\n    sendAjaxRequest(pagerBtn: View.PagerBtn)\r\n    {\r\n        if (!pagerBtn.isEnabled)\r\n            return;\r\n\r\n        let ajaxData;\r\n        if (!pagerBtn.rowId)\r\n            ajaxData = { startIndex: pagerBtn.startIndex };\r\n        else\r\n            ajaxData = { historyRowId: pagerBtn.rowId, startIndex: pagerBtn.startIndex}\r\n\r\n        Ajax.run(Enums.HttpMethod.POST,\r\n            pagerBtn.url,\r\n            ajaxData,\r\n            (newPage: Model.HistoryPage<string>) =>\r\n            {\r\n                $(this.updateTarget).html(newPage.contentHistory);\r\n                this.pagerBtnStyleToggle(newPage);\r\n            });\r\n    }\r\n\r\n    private pagerBtnStyleToggle(model: Model.HistoryPage<string>)\r\n    {\r\n        this.pager.previousBtn.startIndex = model.historyPager.previousStartIndex;\r\n        this.pager.previousBtn.isEnabled = !model.historyPager.isFirstPage;\r\n        this.pager.nextBtn.startIndex = model.historyPager.nextStartIndex;\r\n        this.pager.nextBtn.isEnabled = !model.historyPager.isLastPage;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./infrastructure/handlers.ts","/// <reference path=\"../../../typings/jquery/jquery.d.ts\" />\r\n\r\nimport * as Enums from \"./enums\";\r\n\r\nexport class PagerBtn\r\n{\r\n    private element: JQuery;\r\n\r\n    constructor(element: Element)\r\n    {\r\n        this.element = $(element);\r\n    }\r\n\r\n    set click(value: (eventObject: JQueryEventObject) => any)\r\n    {\r\n        this.element.click(value);\r\n    }\r\n\r\n    set isEnabled(value: boolean)\r\n    {\r\n        if (value)\r\n            this.element.parent().removeClass(\"disabled\");\r\n        else\r\n            this.element.parent().addClass(\"disabled\");\r\n    }\r\n    get isEnabled(): boolean\r\n    {\r\n        return !this.element.parent().hasClass(\"disabled\");\r\n    }\r\n\r\n    get role(): Enums.PagerElementRole\r\n    {\r\n\r\n        return Enums.PagerElementRole[this.element.attr(\"data-role\")];\r\n    }\r\n\r\n    get startIndex(): number\r\n    {\r\n        return +this.element.attr(\"data-start-index\");\r\n    }\r\n    set startIndex(value: number)\r\n    {\r\n        this.element.attr(\"data-start-index\", value);\r\n    }\r\n\r\n    get url(): string\r\n    {\r\n        return this.element.attr(\"href\");\r\n    }\r\n\r\n    get rowId():string\r\n    {\r\n        return this.element.attr(\"data-history-row-id\");\r\n    }\r\n}\r\n\r\nexport class Pager\r\n{\r\n    nextBtn: PagerBtn;\r\n    previousBtn: PagerBtn;\r\n    selector: string;\r\n\r\n    constructor(selector: string)\r\n    {\r\n        this.selector = selector;\r\n        this.getPagerElements(selector);\r\n    }\r\n\r\n    private getPagerElements(selector: string)\r\n    {\r\n        let elments = $(selector);\r\n        if (elments.length !== 0)\r\n        {\r\n            elments.each((index: number, elem: Element) =>\r\n            {\r\n                switch (Enums.PagerElementRole[$(elem).attr(\"data-role\")])\r\n                {\r\n                    case Enums.PagerElementRole.Next:\r\n                        this.nextBtn = new PagerBtn(elem);\r\n                        break;\r\n                    case Enums.PagerElementRole.Previous:\r\n                        this.previousBtn = new PagerBtn(elem);\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n        else\r\n        {\r\n            throw \"selector does not indicate page elements\";\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./infrastructure/view.ts","import * as Model from \"../core/model\"\r\nimport MeasurementsViewModel = Model.MeasurementsViewModel;\r\nimport MeasurementResult = Model.MeasurementResult;\r\nimport { ChartDisplayer } from \"./chartDisplayer\"\r\nimport { TableDisplayer } from \"./tableDisplayer\"\r\n\r\nexport class Displayer\r\n{\r\n    private isHidden = true;\r\n    private chartDisplayer: ChartDisplayer;\r\n    private tableDisplayer: TableDisplayer;\r\n    private model: MeasurementsViewModel;\r\n\r\n    constructor(chartId: string, tableContainerId: string)\r\n    {\r\n        this.model = new MeasurementsViewModel();\r\n        this.chartDisplayer = new ChartDisplayer(chartId, this.model);\r\n        this.tableDisplayer = new TableDisplayer(tableContainerId, this.model);\r\n    }\r\n\r\n    visualize(model: MeasurementResult)\r\n    {\r\n        this.format(model);\r\n        this.model.push(model);\r\n        this.chartDisplayer.display(model);\r\n        this.tableDisplayer.display(model);\r\n    }\r\n\r\n    clean()\r\n    {\r\n        this.model.results = [];\r\n        this.tableDisplayer.clear();\r\n        this.chartDisplayer.clear();\r\n    }\r\n\r\n    sortAndDisplay()\r\n    {\r\n        this.model.sortModelExceptFirst();\r\n        this.chartDisplayer.display();\r\n        this.tableDisplayer.display();\r\n    }\r\n\r\n    show()\r\n    {\r\n        if (!this.isHidden) return;\r\n        this.chartDisplayer.show();\r\n        this.tableDisplayer.show();\r\n        this.isHidden = false;\r\n    }\r\n\r\n    hide()\r\n    {\r\n        if (this.isHidden) return;\r\n        this.chartDisplayer.hide();\r\n        this.tableDisplayer.hide(); \r\n        this.isHidden = true;\r\n    }\r\n\r\n    private format(model: MeasurementResult)\r\n    {\r\n        model.mintime = +model.mintime.toFixed(2);\r\n        model.maxtime = +model.maxtime.toFixed(2);\r\n    }\r\n}\r\n\r\n//class ChartDisplayer2\r\n//{\r\n//    chart: Chart;\r\n//    private modelParts: ResultPack;\r\n//    private state: ChartMode;\r\n//    private model: MeasurementsViewModel;\r\n\r\n//    constructor(div: HTMLElement, model: MeasurementsViewModel)\r\n//    {\r\n//        this.state = ChartMode.Initialize;\r\n//        this.model = model;\r\n//        this.chartInit(div);\r\n//        this.dataInit();\r\n//    }\r\n\r\n//    display(model?: MeasurementResult)\r\n//    {\r\n//        switch (this.state)\r\n//        {\r\n//            case ChartMode.Initialize:\r\n//                this.initAndDisplay(model);\r\n//                this.state = ChartMode.RealTimeUpdate;\r\n//                break;\r\n//            case ChartMode.RealTimeUpdate:\r\n//                this.updateChart(model);\r\n//                break;\r\n//            case ChartMode.SortAndDisplay:\r\n//                this.replaceChartData();\r\n//                this.chart.update();\r\n//                this.state = ChartMode.RealTimeUpdate;\r\n//                break;\r\n//        }\r\n//    }\r\n\r\n//    sortAdnDisplay()\r\n//    {\r\n//        this.state = ChartMode.SortAndDisplay;\r\n//        this.display();\r\n//    }\r\n\r\n//    private updateModelParts(value: MeasurementResult)\r\n//    {\r\n//        this.modelParts.urls.push(value.url);\r\n//        this.modelParts.minValues.push(value.mintime);\r\n//        this.modelParts.maxValues.push(value.maxtime);\r\n//    }\r\n\r\n//    private initAndDisplay(value: MeasurementResult)\r\n//    {\r\n//        this.updateModelParts(value);\r\n//        //this.chart.show();\r\n//        this.chart.create();\r\n//    }\r\n\r\n//    private updateChart(value: MeasurementResult)\r\n//    {\r\n//        this.updateModelParts(value);\r\n//        this.chart.update();\r\n//    }\r\n\r\n//    private replaceChartData()\r\n//    {\r\n//        let tempModelAsArray = this.splitModel();\r\n//        this.chart.data[0].x = tempModelAsArray.urls;\r\n//        this.chart.data[1].x = tempModelAsArray.urls;\r\n//        this.chart.data[0].y = tempModelAsArray.maxValues;\r\n//        this.chart.data[1].y = tempModelAsArray.minValues;\r\n//    }\r\n\r\n//    private splitModel(): ResultPack\r\n//    {\r\n//        let res: ResultPack = new ResultPack();\r\n//        for (let item of this.model.results)\r\n//        {\r\n//            res.urls.push(item.url);\r\n//            res.minValues.push(item.mintime);\r\n//            res.maxValues.push(item.maxtime);\r\n//        }\r\n//        return res;\r\n//    }\r\n\r\n//    private dataInit()\r\n//    {\r\n//        this.modelParts = new ResultPack();\r\n\r\n//        let trace1 = {\r\n//            x: this.modelParts.urls,\r\n//            y: this.modelParts.maxValues,\r\n//            name: 'Max',\r\n//            type: 'bar',\r\n//            marker: { color: 'rgb(55, 83, 109)' }\r\n//        };\r\n//        let trace2 = {\r\n//            x: this.modelParts.urls,\r\n//            y: this.modelParts.minValues,\r\n//            name: 'Min',\r\n//            type: 'bar',\r\n//            marker: { color: 'rgb(26, 118, 255)' }\r\n//        };\r\n//        let data = [trace1, trace2];\r\n//        this.chart.data = data;\r\n//    }\r\n\r\n//    private chartInit(divId: HTMLElement)\r\n//    {\r\n//        this.chart = new Chart();\r\n//        let layout = {\r\n//            font: {\r\n//                family: \"Segoe UI, Times New Roman, Open Sans, verdana, arial, sans-serif\",\r\n//                color: '#444'\r\n//            },\r\n//            title: 'Load Time Results',\r\n//            barmode: 'overlay',\r\n//            autosize: true,\r\n//            xaxis: {\r\n//                title: 'Urls',\r\n//                showticklabels: false,\r\n//                autorange: true\r\n//            },\r\n//            yaxis: {\r\n//                title: 'Time (s)',\r\n//                autorange: true,\r\n//                titlefont: {\r\n//                    size: 16,\r\n//                    color: 'rgb(107, 107, 107)'\r\n//                },\r\n//                tickfont: {\r\n//                    size: 14,\r\n//                    color: 'rgb(107, 107, 107)'\r\n//                }\r\n//            },\r\n//            legend: {\r\n//                x: 0,\r\n//                y: 1.0,\r\n//                bgcolor: 'rgba(255, 255, 255, 0)',\r\n//                bordercolor: 'rgba(255, 255, 255, 0)'\r\n//            }\r\n//        };\r\n//        this.chart.layout = layout;\r\n//        this.chart.canvasElement = divId;\r\n//    }\r\n//}\r\n//enum ChartMode\r\n//{\r\n//    Initialize,\r\n//    RealTimeUpdate,\r\n//    SortAndDisplay\r\n//}\n\n\n// WEBPACK FOOTER //\n// ./graphics/displayer.ts","export class MeasurementsViewModel\r\n{\r\n    results: MeasurementResult[];\r\n\r\n    constructor(model?: MeasurementResult[])\r\n    {\r\n        this.results = model;\r\n    }\r\n\r\n    sortModelExceptFirst()\r\n    {\r\n        let first = this.results.shift();\r\n        this.sortModel();\r\n        this.results.unshift(first);\r\n    }\r\n\r\n    sortModel()\r\n    {\r\n        this.results.sort((a, b) => a.mintime - b.mintime);\r\n    }\r\n\r\n    push(value: MeasurementResult)\r\n    {\r\n        this.results.push(value);\r\n    }\r\n}\r\n\r\nexport class MeasurementResult {\r\n    url: string;\r\n    mintime: number;\r\n    maxtime: number;\r\n}\r\n\r\nexport class HistoryPage<T> {\r\n    contentHistory: T;\r\n    historyPager: HistoryPager;\r\n}\r\n\r\nexport class HistoryPager\r\n{\r\n    isLastPage: boolean;\r\n    isFirstPage: boolean;\r\n    previousStartIndex: number;\r\n    nextStartIndex: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./core/model.ts","import { ElementDisplayer } from \"./elementDisplayer\"\r\nimport { Chart } from \"./chart\"\r\nimport * as Model from \"../core/model\"\r\nimport MeasurementResult = Model.MeasurementResult;\r\nimport MeasurementsViewModel = Model.MeasurementsViewModel;\r\n\r\nexport class ChartDisplayer extends ElementDisplayer<MeasurementsViewModel>\r\n{\r\n    private chart: Chart;\r\n    private modelParts: ResultPack;\r\n\r\n    constructor(divContainerId: string, model: MeasurementsViewModel)\r\n    {\r\n        super(divContainerId, model);\r\n        this.chartInit(this.htmlElement);\r\n        this.dataInit();\r\n        this.chart.create();\r\n    }\r\n\r\n    protected displayFromLocalModel()\r\n    {\r\n        this.replaceChartData(this.splitModel());\r\n        this.chart.update();\r\n    }\r\n\r\n    protected displayFromOuterModel<T extends MeasurementResult>(model: T)\r\n    {\r\n        this.updateChart(model);\r\n    }\r\n\r\n    clear()\r\n    {\r\n        this.modelParts = new ResultPack();\r\n        this.replaceChartData(this.modelParts);\r\n    }\r\n\r\n    private updateModelParts(value: MeasurementResult)\r\n    {\r\n        this.modelParts.urls.push(value.url);\r\n        this.modelParts.minValues.push(value.mintime);\r\n        this.modelParts.maxValues.push(value.maxtime);\r\n    }\r\n\r\n    private updateChart(value: MeasurementResult)\r\n    {\r\n        this.updateModelParts(value);\r\n        this.chart.update();\r\n    }\r\n\r\n    private replaceChartData(modelAsArray: ResultPack)\r\n    {\r\n        this.chart.data[0].x = modelAsArray.urls;\r\n        this.chart.data[1].x = modelAsArray.urls;\r\n        this.chart.data[0].y = modelAsArray.maxValues;\r\n        this.chart.data[1].y = modelAsArray.minValues;\r\n    }\r\n\r\n    private splitModel(): ResultPack\r\n    {\r\n        let res: ResultPack = new ResultPack();\r\n        for (let item of this.model.results)\r\n        {\r\n            res.urls.push(item.url);\r\n            res.minValues.push(item.mintime);\r\n            res.maxValues.push(item.maxtime);\r\n        }\r\n        return res;\r\n    }\r\n\r\n    private dataInit()\r\n    {\r\n        this.modelParts = new ResultPack();\r\n\r\n        let trace1 = {\r\n            x: this.modelParts.urls,\r\n            y: this.modelParts.maxValues,\r\n            name: 'Max',\r\n            type: 'bar',\r\n            marker: { color: 'rgb(55, 83, 109)' }\r\n        };\r\n        let trace2 = {\r\n            x: this.modelParts.urls,\r\n            y: this.modelParts.minValues,\r\n            name: 'Min',\r\n            type: 'bar',\r\n            marker: { color: 'rgb(26, 118, 255)' }\r\n        };\r\n        let data = [trace1, trace2];\r\n        this.chart.data = data;\r\n    }\r\n\r\n    private chartInit(divId: HTMLElement)\r\n    {\r\n        let container = $(divId);\r\n        let w = 975;\r\n        let h = 450;\r\n        // hide the char container element\r\n        container.hide();\r\n\r\n        this.chart = new Chart();\r\n        let layout = {\r\n            font: {\r\n                family: \"Segoe UI, Times New Roman, Open Sans, verdana, arial, sans-serif\",\r\n                color: '#444'\r\n            },\r\n            title: 'Load Time Results',\r\n            barmode: 'overlay',\r\n            autosize: true,\r\n            width: w,\r\n            height: h,\r\n            xaxis: {\r\n                title: 'Urls',\r\n                showticklabels: false,\r\n                autorange: true\r\n            },\r\n            yaxis: {\r\n                title: 'Time (s)',\r\n                autorange: true,\r\n                titlefont: {\r\n                    size: 16,\r\n                    color: 'rgb(107, 107, 107)'\r\n                },\r\n                tickfont: {\r\n                    size: 14,\r\n                    color: 'rgb(107, 107, 107)'\r\n                }\r\n            },\r\n            legend: {\r\n                x: 0,\r\n                y: 1.0,\r\n                bgcolor: 'rgba(255, 255, 255, 0)',\r\n                bordercolor: 'rgba(255, 255, 255, 0)'\r\n            }\r\n        };\r\n        this.chart.layout = layout;\r\n        this.chart.canvasElement = divId;\r\n    }\r\n}\r\n\r\nclass ResultPack\r\n{\r\n    constructor()\r\n    {\r\n        this.urls = [];\r\n        this.minValues = [];\r\n        this.maxValues = [];\r\n    }\r\n\r\n    urls: string[];\r\n    minValues: number[];\r\n    maxValues: number[];\r\n}\n\n\n// WEBPACK FOOTER //\n// ./graphics/chartDisplayer.ts","export abstract class ElementDisplayer<TData>\r\n{\r\n    protected htmlElement: HTMLElement;\r\n    protected model: TData;\r\n\r\n    constructor(elementId: string, model: TData)\r\n    {\r\n        this.htmlElement = <HTMLElement>document.querySelector(elementId);\r\n        this.model = model;\r\n    }\r\n\r\n    display<T>(model?: T)\r\n    {\r\n        if (model)\r\n        {\r\n            this.displayFromOuterModel(model);\r\n        }\r\n        else\r\n        {\r\n            this.displayFromLocalModel();\r\n        }\r\n    }\r\n\r\n    show()\r\n    {\r\n        this.htmlElement.style.display = \"block\";\r\n    }\r\n\r\n    hide()\r\n    {\r\n        this.htmlElement.style.display = \"none\";\r\n    }\r\n\r\n    protected abstract displayFromLocalModel();\r\n    protected abstract displayFromOuterModel<T>(model: T);\r\n}\n\n\n// WEBPACK FOOTER //\n// ./graphics/elementDisplayer.ts","export class Chart\r\n{\r\n    data: any;\r\n    layout: any;\r\n    canvasElement: HTMLElement;\r\n\r\n    create()\r\n    {\r\n        Plotly.newPlot(this.canvasElement, this.data, this.layout);\r\n    }\r\n\r\n    update()\r\n    {\r\n        Plotly.redraw(this.canvasElement);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./graphics/chart.ts","import { ElementDisplayer } from \"./elementDisplayer\"\r\nimport * as Model from \"../core/model\"\r\nimport * as Table from \"./tableMaker\"\r\nimport MeasurementResult = Model.MeasurementResult;\r\nimport MeasurementsViewModel = Model.MeasurementsViewModel;\r\n\r\nexport class TableDisplayer extends ElementDisplayer<MeasurementsViewModel>\r\n{\r\n    private tableMaker: Table.TableMaker;\r\n\r\n    constructor(tableContainerId: string, model: MeasurementsViewModel)\r\n    {\r\n        super(tableContainerId, model);\r\n        this.tableMakerInit();\r\n    }\r\n\r\n    private tableMakerInit()\r\n    {\r\n        let headers = [\"Url\", \"Min (s)\", \"Max (s)\"];\r\n        let props = [\"url\", \"mintime\", \"maxtime\"];\r\n        let maper = new Table.HeaderPropertyMaper(headers, props);\r\n\r\n        this.tableMaker = new Table.TableMaker(this.htmlElement, maper);\r\n        this.tableMaker.tableClass = \"table table-bordered table-hover\";\r\n        this.tableMaker.createTabelInContainer();\r\n    }\r\n\r\n    protected displayFromLocalModel()\r\n    {\r\n        this.tableMaker.curentColumnNumber = 1;\r\n        this.tableMaker.fillTableFrom(this.model.results);\r\n        this.tableMaker.curentColumnNumber = 1;\r\n    }\r\n\r\n    protected displayFromOuterModel<T extends MeasurementResult>(model: T)\r\n    {\r\n        this.tableMaker.addRow(model);\r\n    }\r\n\r\n    clear()\r\n    {\r\n        let tbody = this.tableMaker.tableElement.children[0];\r\n        if (tbody)\r\n            tbody.innerHTML = '';\r\n        this.tableMaker.addHeader();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./graphics/tableDisplayer.ts","export class TableMaker\r\n{\r\n    tableClass: string;\r\n    numberColumn: boolean;\r\n    maper: HeaderPropertyMaper;\r\n    tableContainer: HTMLElement;\r\n\r\n    curentColumnNumber: number;\r\n    tableElement: HTMLElement;\r\n\r\n    constructor(tableContainer?: HTMLElement, maper?: HeaderPropertyMaper)\r\n    {\r\n        this.numberColumn = true;\r\n        this.maper = maper;\r\n        this.tableContainer = tableContainer;\r\n        this.curentColumnNumber = 1;\r\n    }\r\n\r\n    private makeHeaderRow(): string\r\n    {\r\n        let result = \"\";\r\n        result += `<tr>`;\r\n\r\n        result += this.makeHeadersByMaper();\r\n\r\n        result += \"</tr>\";\r\n\r\n        return result;\r\n    }\r\n\r\n    private makeHeadersByMaper(): string\r\n    {\r\n        let result = this.numberColumn ? \"<th>#</th>\" : \"\";\r\n\r\n        for (let item of this.maper.list)\r\n        {\r\n            result += `<th>` + item.headerName + \"</th>\";\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private makeTableRow(model): HTMLTableRowElement\r\n    {\r\n        let row: HTMLTableRowElement = document.createElement(\"tr\");\r\n        row.innerHTML = this.maper ? this.makeTableDataByMaper(model) : this.makeTableDataByDefault(model);\r\n        return row;\r\n    }\r\n\r\n    private makeClassAttribute(classValue: string): string\r\n    {\r\n        return `${classValue ? `class=${classValue}` : ''}`;\r\n    }\r\n\r\n    private addRows(model: Array<Object>)\r\n    {\r\n        for (let item of model)\r\n        {\r\n            this.addRow(item);\r\n        }\r\n    }\r\n\r\n    fillTableFrom(model: Array<Object>, mode = InsertionMode.Replace)\r\n    {\r\n        switch (mode)\r\n        {\r\n            case InsertionMode.Append:\r\n                this.addRows(model);\r\n                break;\r\n            case InsertionMode.Replace:\r\n                this.tableElement.innerHTML = '';\r\n                this.addHeader();\r\n                this.addRows(model);\r\n                break;\r\n        }\r\n    }\r\n\r\n    addRow(model)\r\n    {\r\n        this.tableElement.children[0].appendChild(this.makeTableRow(model));\r\n    }\r\n\r\n    addHeader()\r\n    {\r\n        this.tableElement.innerHTML = this.makeHeaderRow();\r\n    }\r\n\r\n    createTabelInContainer(tableContainer?: HTMLElement)\r\n    {\r\n        let container = tableContainer || this.tableContainer;\r\n        if (!container)\r\n            throw new Error(\"I can not insert a table into nowhere, tableContainer is undefined\");\r\n\r\n        let table = document.createElement(\"table\");\r\n        if (this.tableClass)\r\n            table.className = this.tableClass;\r\n        this.tableElement = table;\r\n        container.appendChild(table);\r\n    }\r\n\r\n    private makeTableDataByDefault(model): string\r\n    {\r\n        let result = this.addRowCounter();\r\n        for (let propName in model)\r\n        {\r\n            result += `<td>${model[propName]}</td>`;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private makeTableDataByMaper(model): string\r\n    {\r\n        let result = this.addRowCounter();\r\n        for (let item of this.maper.list)\r\n        {\r\n            result += `<td>${model[item.propertyName]}</td>`;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private addRowCounter(): string\r\n    {\r\n        return this.numberColumn ? `<td>${this.curentColumnNumber++}</td>` : \"\";\r\n    }\r\n}\r\n\r\nexport enum InsertionMode {\r\n    Replace,\r\n    Append\r\n}\r\n\r\nexport class HeaderPropertyMaper\r\n{\r\n    list: HeaderProperty[];\r\n\r\n    constructor(headers?: string[], properties?: string[])\r\n    {\r\n        this.list = [];\r\n        if (headers && properties)\r\n            this.addMap(headers, properties);\r\n    }\r\n\r\n    addMap(headers: string[], properties: string[])\r\n    {\r\n        if (headers.length !== properties.length)\r\n            throw new Error(\"Arrays must have the same length\");\r\n\r\n        for (let i = 0; i < headers.length; i++)\r\n        {\r\n            this.list.push(new HeaderProperty(headers[i], properties[i]));\r\n        }\r\n    }\r\n}\r\n\r\nexport class HeaderProperty\r\n{\r\n    constructor(headerName: string, propertyName: string)\r\n    {\r\n        this.headerName = headerName;\r\n        this.propertyName = propertyName;\r\n    }\r\n\r\n    headerName: string;\r\n    propertyName: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./graphics/tableMaker.ts","export class Notifier\r\n{\r\n    connectionId;\r\n    constructor(callback)\r\n    {\r\n        let notifier = $.connection.notificationHub;\r\n        notifier.client.displayMessage = callback;\r\n        let iAm = this;\r\n        $.connection.hub.start().done(() =>\r\n        {\r\n            iAm.connectionId = $.connection.hub.id;\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./infrastructure/signalR.ts"],"sourceRoot":""}